
&НаКлиенте
Процедура Тест(Команда)
	
	ТестНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ТестНаСервере()
	
	ТаблицаАД = ПолучитьДанныеАД();
	
	ОбновитьДанныеАД(ТаблицаАД);
	
	ВыполнитьЗаполнение();
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьЗаполнение(АктуализироватьВсеЗаписи = Ложь)
	
	ТаблицаФизическиеЛица = ПолучитьФизическиеЛица();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("АктуализироватьВсеЗаписи", АктуализироватьВсеЗаписи);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПользователиАД.objectGUID КАК objectGUID,
	|	ПользователиАД.GUID1C КАК GUID1C,
	|	ПользователиАД.objectSID КАК objectSID,
	|	ПользователиАД.Логин КАК Логин,
	|	ПользователиАД.МобильныйТелефон КАК МобильныйТелефон,
	|	ПользователиАД.Телефон КАК Телефон,
	|	ПользователиАД.АресЭлектроннойПочты КАК АресЭлектроннойПочты,
	|	ПользователиАД.Должность КАК Должность,
	|	ПользователиАД.Подразделение КАК Подразделение,
	|	ПользователиАД.ВыводимоеИмя КАК ВыводимоеИмя,
	|	ПользователиАД.Имя КАК Имя,
	|	ПользователиАД.Фамилия КАК Фамилия,
	|	ПользователиАД.ОбщееИмя КАК ОбщееИмя,
	|	ПользователиАД.ФизическоеЛицо КАК ФизическоеЛицо
	|ИЗ
	|	РегистрСведений.ПользователиАД КАК ПользователиАД
	|ГДЕ
	|	&АктуализироватьВсеЗаписи ИЛИ ПользователиАД.ФизическоеЛицо = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		
		ФизическоеЛицо = ОпределитьФизическоеЛицо(ВыборкаДетальныеЗаписи, ТаблицаФизическиеЛица);
		
		Если ФизическоеЛицо <> Неопределено Тогда
			
			ДанныеПоСотруднику = ПолучитьДанныеПоСотруднику(ФизическоеЛицо, ТаблицаФизическиеЛица);
			
			НаборЗаписей = РегистрыСведений.ПользователиАД.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.objectGUID.Установить(ВыборкаДетальныеЗаписи.objectGUID);
			НаборЗаписей.Прочитать();
			Запись = НаборЗаписей[0];
			Запись.ФизическоеЛицо = ФизическоеЛицо;
			Запись.ОсновнойСотрудник = ДанныеПоСотруднику.ОсновнойСотрудник;
			Запись.КоличествоДействующихСотрудников = ДанныеПоСотруднику.ДействующихСотрудников;
			НаборЗаписей.Записать(Истина);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ОпределитьФизическоеЛицо(ВыборкаДетальныеЗаписи, ТаблицаФизическиеЛица)
	
	МобильныйТелефон = ПреобразоватьТелефон(ВыборкаДетальныеЗаписи.МобильныйТелефон);
	АресЭлектроннойПочты = ПреобразоватьТелефон(ВыборкаДетальныеЗаписи.АресЭлектроннойПочты);
	Фамилия = ПреобразоватьТелефон(ВыборкаДетальныеЗаписи.Фамилия);
	Имя = ПреобразоватьТелефон(ВыборкаДетальныеЗаписи.Имя);
	
	Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.GUID1C) Тогда
		физическоеЛицоУникальныйИдентификатор = Новый УникальныйИдентификатор(СокрЛП(ВыборкаДетальныеЗаписи.GUID1C));
		ФизическоеЛицо = Справочники.ФизическиеЛица.ПолучитьСсылку(физическоеЛицоУникальныйИдентификатор);
		Если СтрНайти(Строка(ФизическоеЛицо), "Объект не найден") = 0 Тогда
			Возврат ФизическоеЛицо;
		КонецЕсли;
	КонецЕсли;
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("МобильныйТелефон", МобильныйТелефон);
	СтруктураОтбора.Вставить("АресЭлектроннойПочты", АресЭлектроннойПочты);
	СтруктураОтбора.Вставить("Фамилия", Фамилия);
	СтруктураОтбора.Вставить("Имя", Имя);
	
	НайденныеСтроки = ТаблицаФизическиеЛица.НайтиСтроки(СтруктураОтбора);
	Если НайденныеСтроки.Количество() = 1 Тогда
		Возврат НайденныеСтроки[0].ФизическоеЛицо;
	ИначеЕсли НайденныеСтроки.Количество() > 1 Тогда
		ТаблицаПоФизЛицу = ТаблицаФизическиеЛица.Скопировать(СтруктураОтбора,"ФизическоеЛицо");
		ТаблицаПоФизЛицу.Свернуть("ФизическоеЛицо");
		Если ТаблицаПоФизЛицу.Количество() = 1 Тогда
			Возврат ТаблицаПоФизЛицу[0].ФизическоеЛицо;
		КонецЕсли;
	КонецЕсли;
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("АресЭлектроннойПочты", АресЭлектроннойПочты);
	СтруктураОтбора.Вставить("Фамилия", Фамилия);
	СтруктураОтбора.Вставить("Имя", Имя);
	
	НайденныеСтроки = ТаблицаФизическиеЛица.НайтиСтроки(СтруктураОтбора);
	Если НайденныеСтроки.Количество() = 1 Тогда
		Возврат НайденныеСтроки[0].ФизическоеЛицо;
	ИначеЕсли НайденныеСтроки.Количество() > 1 Тогда
		ТаблицаПоФизЛицу = ТаблицаФизическиеЛица.Скопировать(СтруктураОтбора,"ФизическоеЛицо");
		ТаблицаПоФизЛицу.Свернуть("ФизическоеЛицо");
		Если ТаблицаПоФизЛицу.Количество() = 1 Тогда
			Возврат ТаблицаПоФизЛицу[0].ФизическоеЛицо;
		КонецЕсли;
	КонецЕсли;
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("Фамилия", Фамилия);
	СтруктураОтбора.Вставить("Имя", Имя);
	
	НайденныеСтроки = ТаблицаФизическиеЛица.НайтиСтроки(СтруктураОтбора);
	Если НайденныеСтроки.Количество() = 1 Тогда
		Возврат НайденныеСтроки[0].ФизическоеЛицо;
	ИначеЕсли НайденныеСтроки.Количество() > 1 Тогда
		ТаблицаПоФизЛицу = ТаблицаФизическиеЛица.Скопировать(СтруктураОтбора,"ФизическоеЛицо");
		ТаблицаПоФизЛицу.Свернуть("ФизическоеЛицо");
		Если ТаблицаПоФизЛицу.Количество() = 1 Тогда
			Возврат ТаблицаПоФизЛицу[0].ФизическоеЛицо;
		КонецЕсли;
	КонецЕсли;
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("АресЭлектроннойПочты", АресЭлектроннойПочты);
	
	НайденныеСтроки = ТаблицаФизическиеЛица.НайтиСтроки(СтруктураОтбора);
	Если НайденныеСтроки.Количество() = 1 Тогда
		Возврат НайденныеСтроки[0].ФизическоеЛицо;
	ИначеЕсли НайденныеСтроки.Количество() > 1 Тогда
		ТаблицаПоФизЛицу = ТаблицаФизическиеЛица.Скопировать(СтруктураОтбора,"ФизическоеЛицо");
		ТаблицаПоФизЛицу.Свернуть("ФизическоеЛицо");
		Если ТаблицаПоФизЛицу.Количество() = 1 Тогда
			Возврат ТаблицаПоФизЛицу[0].ФизическоеЛицо;
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьДанныеПоСотруднику(Знач ФизическоеЛицо, ТаблицаСотрудники)
	
	ДанныеПоСотруднику = Новый Структура("ОсновнойСотрудник, ДействующихСотрудников");
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("ФизическоеЛицо", ФизическоеЛицо);
	
	НайденныеСтроки = ТаблицаСотрудники.НайтиСтроки(СтруктураОтбора);
	ДанныеПоСотруднику.ДействующихСотрудников = НайденныеСтроки.Количество();
	
	Если НайденныеСтроки.Количество() = 1 Тогда
		ДанныеПоСотруднику.ОсновнойСотрудник = НайденныеСтроки[0].Сотрудник;
	ИначеЕсли НайденныеСтроки.Количество() > 1 Тогда
		ТаблицаСотрудникиПоФизЛицу = ТаблицаСотрудники.Скопировать(СтруктураОтбора, "ФизическоеЛицо, Сотрудник, ВидЗанятости");
		
		Для Каждого СтрокаСотрудник Из ТаблицаСотрудникиПоФизЛицу Цикл
			Если СтрокаСотрудник.ВидЗанятости = Перечисления.ВидыЗанятости.ОсновноеМестоРаботы Тогда
				ДанныеПоСотруднику.ОсновнойСотрудник = СтрокаСотрудник.Сотрудник;
			КонецЕсли;
		КонецЦикла;
		
		Если Не ЗначениеЗаполнено(ДанныеПоСотруднику.ОсновнойСотрудник) Тогда
			ДанныеПоСотруднику.ОсновнойСотрудник = ТаблицаСотрудникиПоФизЛицу[0].Сотрудник;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ДанныеПоСотруднику; 
	
КонецФункции

&НаСервере
Функция ПолучитьФизическиеЛица()
	
	ТаблицаФизическихЛиц = ПолучитьТаблицуСотрудников();
	
	Для Каждого СтрокаТаблица Из ТаблицаФизическихЛиц Цикл
		
		СтрокаТаблица.МобильныйТелефон = ПреобразоватьТелефон(СтрокаТаблица.МобильныйТелефон);	
		
	КонецЦикла;
	
	Возврат ТаблицаФизическихЛиц; 
	
КонецФункции

&НаСервере
Функция ПолучитьТаблицуСотрудников() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РаботникиОрганизацийСрезПоследних.Сотрудник.ФизЛицо КАК ФизическоеЛицо,
	|	РаботникиОрганизацийСрезПоследних.Сотрудник КАК Сотрудник,
	|	РаботникиОрганизацийСрезПоследних.Сотрудник.ВидЗанятости КАК ВидЗанятости,
	|	РаботникиОрганизацийСрезПоследних.Сотрудник.ФизЛицо.Наименование КАК ФизическоеЛицоНаименование,
	|	РаботникиОрганизацийСрезПоследних.Организация.Наименование КАК ОрганизацияНаименование,
	|	РаботникиОрганизацийСрезПоследних.ЦФО.Наименование КАК ЦФОНаименование,
	|	РаботникиОрганизацийСрезПоследних.Должность.Наименование КАК ДолжностьНаименование,
	|	ВЫРАЗИТЬ(РаботникиОрганизацийСрезПоследних.Сотрудник.Емайл КАК СТРОКА(100)) КАК СотрудникЕмайл,
	|	ВЫРАЗИТЬ(РаботникиОрганизацийСрезПоследних.Сотрудник.ТелефонРабочий КАК СТРОКА(100)) КАК СотрудникТелефонРабочий,
	|	ВЫРАЗИТЬ(РаботникиОрганизацийСрезПоследних.Сотрудник.ТелефонМобильный КАК СТРОКА(100)) КАК СотрудникТелефонМобильный,
	|	РаботникиОрганизацийСрезПоследних.Сотрудник.ДатаРождения КАК СотрудникДатаРождения
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций.СрезПоследних КАК РаботникиОрганизацийСрезПоследних
	|ГДЕ
	|	РаботникиОрганизацийСрезПоследних.Сотрудник.ДатаПриемаНаРаботу <> ДАТАВРЕМЯ(1, 1, 1)
	|	И (РаботникиОрганизацийСрезПоследних.Сотрудник.ДатаУвольнения = ДАТАВРЕМЯ(1, 1, 1)
	|			ИЛИ КОНЕЦПЕРИОДА(РаботникиОрганизацийСрезПоследних.Сотрудник.ДатаУвольнения, ДЕНЬ) >= &Дата)
	|	И РаботникиОрганизацийСрезПоследних.ТекОрганизация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|	И РаботникиОрганизацийСрезПоследних.ЦФО <> ЗНАЧЕНИЕ(Справочник.ЦФО.ПустаяСсылка)
	|	И РаботникиОрганизацийСрезПоследних.Должность <> ЗНАЧЕНИЕ(Справочник.Должности.ПустаяСсылка)
	|	И РаботникиОрганизацийСрезПоследних.Сотрудник.ПометкаУдаления = ЛОЖЬ";
	Запрос.УстановитьПараметр("Дата", ТекущаяДата());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ПредварительнаяТаблица = РезультатЗапроса.Выгрузить();
	
	ТаблицаДанные = Новый ТаблицаЗначений;
	ТаблицаДанные.Колонки.Добавить("Фамилия", Новый ОписаниеТипов("Строка"));
	ТаблицаДанные.Колонки.Добавить("Имя", Новый ОписаниеТипов("Строка"));
	ТаблицаДанные.Колонки.Добавить("Отчество", Новый ОписаниеТипов("Строка"));
	ТаблицаДанные.Колонки.Добавить("Должность", Новый ОписаниеТипов("Строка"));
	ТаблицаДанные.Колонки.Добавить("Организация", Новый ОписаниеТипов("Строка"));
	ТаблицаДанные.Колонки.Добавить("ЦФО", Новый ОписаниеТипов("Строка"));
	ТаблицаДанные.Колонки.Добавить("АресЭлектроннойПочты", Новый ОписаниеТипов("Строка"));
	ТаблицаДанные.Колонки.Добавить("МобильныйТелефон", Новый ОписаниеТипов("Строка"));
	ТаблицаДанные.Колонки.Добавить("ТелефонРабочий", Новый ОписаниеТипов("Строка"));
	ТаблицаДанные.Колонки.Добавить("ЧислоРождения", Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(2, 0)));
	ТаблицаДанные.Колонки.Добавить("МесяцРождения", Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(2, 0)));
	ТаблицаДанные.Колонки.Добавить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	ТаблицаДанные.Колонки.Добавить("ВидЗанятости", Новый ОписаниеТипов("Перечислениессылка.ВидыЗанятости"));
	ТаблицаДанные.Колонки.Добавить("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	
	Для Каждого СтрокаПредварительнаяТаблица Из ПредварительнаяТаблица Цикл
		
		СтрокаТаблицаДанные = ТаблицаДанные.Добавить();
		
		ФИО = СтрокаПредварительнаяТаблица.ФизическоеЛицоНаименование;
		
		МассивФИО = СтрРазделить(СокрЛП(ФИО)," ");
		
		Если МассивФИО.Количество() > 0 Тогда
			СтрокаТаблицаДанные.Фамилия = МассивФИО[0];
		КонецЕсли;
		Если МассивФИО.Количество() > 1 Тогда
			СтрокаТаблицаДанные.Имя = МассивФИО[1];
		КонецЕсли;
		Если МассивФИО.Количество() > 2 Тогда
			СтрокаТаблицаДанные.Отчество = МассивФИО[2];
		КонецЕсли;
		
		СтрокаТаблицаДанные.Сотрудник = СтрокаПредварительнаяТаблица.Сотрудник;
		СтрокаТаблицаДанные.ВидЗанятости = СтрокаПредварительнаяТаблица.ВидЗанятости;
		СтрокаТаблицаДанные.ФизическоеЛицо = СтрокаПредварительнаяТаблица.ФизическоеЛицо;
		СтрокаТаблицаДанные.Должность = СокрЛП(СтрокаПредварительнаяТаблица.ДолжностьНаименование);
		СтрокаТаблицаДанные.Организация = СтрЗаменить(СокрЛП(СтрокаПредварительнаяТаблица.ОрганизацияНаименование), """", "'");
		СтрокаТаблицаДанные.ЦФО = СтрЗаменить(СокрЛП(СтрокаПредварительнаяТаблица.ЦФОНаименование), """", "'");
		СтрокаТаблицаДанные.АресЭлектроннойПочты = СокрЛП(СтрокаПредварительнаяТаблица.СотрудникЕмайл);
		СтрокаТаблицаДанные.МобильныйТелефон = СокрЛП(СтрокаПредварительнаяТаблица.СотрудникТелефонМобильный);
		СтрокаТаблицаДанные.ТелефонРабочий = СокрЛП(СтрокаПредварительнаяТаблица.СотрудникТелефонРабочий);
		СтрокаТаблицаДанные.ЧислоРождения = День(СтрокаПредварительнаяТаблица.СотрудникДатаРождения);
		СтрокаТаблицаДанные.МесяцРождения = Месяц(СтрокаПредварительнаяТаблица.СотрудникДатаРождения);
		
	КонецЦикла;
	
	Возврат ТаблицаДанные;
	
КонецФункции

&НаСервере
Функция ПреобразоватьТелефон(Знач Телефон)
	
	ВозвращаемыйТелефон = Телефон;
	
	ВозвращаемыйТелефон = СтрЗаменить(ВозвращаемыйТелефон, " ", "");
	ВозвращаемыйТелефон = СтрЗаменить(ВозвращаемыйТелефон, "-", "");
	ВозвращаемыйТелефон = СтрЗаменить(ВозвращаемыйТелефон, "+", "");
	ВозвращаемыйТелефон = СтрЗаменить(ВозвращаемыйТелефон, "(", "");
	ВозвращаемыйТелефон = СтрЗаменить(ВозвращаемыйТелефон, ")", "");
	
	Если СтрДлина(ВозвращаемыйТелефон) = 11 Тогда
		ВозвращаемыйТелефон = "8" + Прав(ВозвращаемыйТелефон, 10);
	КонецЕсли;
	
	Возврат ВозвращаемыйТелефон;	
	
КонецФункции

&НаСервере
Процедура ОбновитьДанныеАД(Знач ТаблицаАД)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПользователиАД.objectGUID КАК objectGUID,
	|	ПользователиАД.objectSID КАК objectSID,
	|	ПользователиАД.Логин КАК Логин,
	|	ПользователиАД.МобильныйТелефон КАК МобильныйТелефон,
	|	ПользователиАД.Телефон КАК Телефон,
	|	ПользователиАД.АресЭлектроннойПочты КАК АресЭлектроннойПочты,
	|	ПользователиАД.Должность КАК Должность,
	|	ПользователиАД.Подразделение КАК Подразделение,
	|	ПользователиАД.ВыводимоеИмя КАК ВыводимоеИмя,
	|	ПользователиАД.Имя КАК Имя,
	|	ПользователиАД.Фамилия КАК Фамилия,
	|	ПользователиАД.ОбщееИмя КАК ОбщееИмя,
	|	ПользователиАД.ФизическоеЛицо КАК ФизическоеЛицо
	|ИЗ
	|	РегистрСведений.ПользователиАД КАК ПользователиАД";
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаАД = РезультатЗапроса.Выбрать();
	
	НаборЗаписей = РегистрыСведений.ПользователиАД.СоздатьНаборЗаписей();
	
	Для Каждого Строка Из ТаблицаАД Цикл
		
		НаборЗаписей.Очистить();
		НаборЗаписей.Отбор.objectGUID.Установить(Строка.objectGUID);
		Запись = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(Запись, Строка);
		
		ВыборкаАД.Сбросить();
		Если ВыборкаАД.НайтиСледующий(Строка.objectGUID, "objectGUID") Тогда
			Запись.ФизическоеЛицо = ВыборкаАД.ФизическоеЛицо;
		КонецЕсли;
		НаборЗаписей.Записать(Истина);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьДанныеАД()
	
	ТаблицаРезультат = ПолучитьТаблицуАД();
	
	ADOCommand = Новый COMОбъект("ADODB.Command");
	ADOConnection = Новый COMОбъект("ADODB.Connection");
	ADOConnection.Provider = "ADsDSOObject";
	ADOConnection.Open("Active Directory Provider");
	ADOCommand.ActiveConnection = ADOConnection;
	
	RootDSE = ПолучитьCOMОбъект("LDAP://RootDSE");
	
	Domen = RootDSE.Get("defaultNamingContext");
	
	МассивБаз = Новый Массив;
	
	База = "<LDAP://OU=Белые Ночи,OU=Внутренние адресаты," + Domen + ">";
	МассивБаз.Добавить(База);
	База = "<LDAP://OU=Колл-центр,OU=Внутренние адресаты," + Domen + ">";
	МассивБаз.Добавить(База);
	База = "<LDAP://OU=Консультанты,OU=Внутренние адресаты," + Domen + ">";
	МассивБаз.Добавить(База);
	База = "<LDAP://OU=ММЦ СОГАЗ,OU=Внутренние адресаты," + Domen + ">";
	МассивБаз.Добавить(База);
	База = "<LDAP://OU=СОГАЗ Профмедицина,OU=Внутренние адресаты," + Domen + ">";
	МассивБаз.Добавить(База);
	База = "<LDAP://OU=Сотрудники СОГАЗ,OU=Внутренние адресаты," + Domen + ">";
	МассивБаз.Добавить(База);
	База = "<LDAP://OU=Внутренние адресаты,OU=Дюны," + Domen + ">";
	МассивБаз.Добавить(База);
	База = "<LDAP://OU=Колл-центр,OU=Внутренние адресаты,OU=ММК Геленджик," + Domen + ">";
	МассивБаз.Добавить(База);
	База = "<LDAP://OU=ММЦ СОГАЗ Геленджик,OU=Внутренние адресаты,OU=ММК Геленджик," + Domen + ">";
	МассивБаз.Добавить(База);
	База = "<LDAP://OU=РН-СТ,OU=Внутренние адресаты,OU=ММК Геленджик," + Domen + ">";
	МассивБаз.Добавить(База);
	База = "<LDAP://OU=Внутренние адресаты,OU=ММЦ Тобольск," + Domen + ">";
	МассивБаз.Добавить(База);
	База = "<LDAP://OU=Колл-центр,OU=Внутренние адресаты,OU=Нижнекамск," + Domen + ">";
	МассивБаз.Добавить(База);
	База = "<LDAP://OU=МК Спасение,OU=Внутренние адресаты,OU=Нижнекамск," + Domen + ">";
	МассивБаз.Добавить(База);
	
	//Здесь можно задать произвольный фильтр для выборки пользователей из AD
	//Фильтр = "(&(CN=*))"; 
	//(&(objectCategory=Person)(objectClass=User)(memberOf=OU=PC Users,OU=HQOU=Office,DC=domain,DC=local))
	
	Фильтр = "(&(objectCategory=person)(objectClass=user))";
	
	Реквизиты = "cn, sn, givenName, displayName, department, title, telephoneNumber, mobile, mail, sAMAccountName, objectGUID, objectSID, extensionAttribute1";
	
	Для Каждого База Из МассивБаз Цикл
		
		ТекстЗапроса = База + ";" + Фильтр + ";" + Реквизиты + ";subtree";
		
		ADOCommand.CommandText = ТекстЗапроса;
		ADOCommand.Properties("Page Size").Value = 100;
		ADOCommand.Properties("Timeout").Value = 30;
		ADOCommand.Properties("Cache Results").Value = Ложь;
		
		Выборка = ADOCommand.Execute();
		
		Пока НЕ Выборка.EOF Цикл
			
			ВыводимоеИмя = Выборка.Fields("displayName").Value;
			
			Если Не ЗначениеЗаполнено(ВыводимоеИмя) Тогда
				//Выборка.MoveNext();
				//Продолжить;
			КонецЕсли;
			
			ОбщееИмя = Выборка.Fields("cn").Value;
			Фамилия = Выборка.Fields("sn").Value;
			Имя = Выборка.Fields("givenName").Value;
			
			Подразделение = Выборка.Fields("department").Value;
			Должность = Выборка.Fields("title").Value;
			
			Номера = СокрЛП(Выборка.Fields("telephoneNumber").Value);
			МобильныйТелефон = СокрЛП(Выборка.Fields("mobile").Value);
			
			АресЭлектроннойПочты = СокрЛП(Выборка.Fields("mail").Value);
			Логин = СокрЛП(Выборка.Fields("sAMAccountName").Value);
			
			objectGUID = Выборка.Fields("objectGUID").Value;
			objectSID = Выборка.Fields("objectSID").Value;
			GUID1C = Выборка.Fields("extensionAttribute1").Value;
			
			Если ПустаяСтрока(Номера) Тогда
				Номера = "";
			КонецЕсли;
			
			Если ПустаяСтрока(АресЭлектроннойПочты) Тогда
				Выборка.MoveNext();
				Продолжить;
			КонецЕсли;
			
			НоваяСтрока = ТаблицаРезультат.Добавить();
			НоваяСтрока.ОбщееИмя = ОбщееИмя;
			НоваяСтрока.Фамилия = Фамилия;
			НоваяСтрока.Имя = Имя;
			НоваяСтрока.ВыводимоеИмя = ВыводимоеИмя;
			
			НоваяСтрока.Подразделение = Подразделение;
			НоваяСтрока.Должность = Должность;
			
			НоваяСтрока.Логин = Логин;
			НоваяСтрока.АресЭлектроннойПочты = АресЭлектроннойПочты;
			НоваяСтрока.Телефон = Номера;
			НоваяСтрока.МобильныйТелефон = МобильныйТелефон;
			
			НоваяСтрока.objectGUID = НРег(ПреобразоватьGUID(objectGUID));
			НоваяСтрока.objectSID = ПреобразоватьSID(objectSID);
			НоваяСтрока.GUID1C = GUID1C;
			
			Выборка.MoveNext();
			
		КонецЦикла;
		
		Выборка.Close();
		
	КонецЦикла;
	
	ADOConnection.Close();
	
	Возврат ТаблицаРезультат;
	
КонецФункции

&НаСервере
Функция ПолучитьТаблицуАД()
	
	ТаблицаРезультат = Новый ТаблицаЗначений;
	
	КвалификаторСтроки = Новый КвалификаторыСтроки(100);
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("Строка"));
	ОписаниеТиповСтрока = Новый ОписаниеТипов(МассивТипов, , КвалификаторСтроки);
	
	ТаблицаРезультат.Колонки.Добавить("ОбщееИмя", ОписаниеТиповСтрока);
	ТаблицаРезультат.Колонки.Добавить("Фамилия", ОписаниеТиповСтрока);
	ТаблицаРезультат.Колонки.Добавить("Имя", ОписаниеТиповСтрока);
	ТаблицаРезультат.Колонки.Добавить("ВыводимоеИмя", ОписаниеТиповСтрока);
	
	ТаблицаРезультат.Колонки.Добавить("Подразделение", ОписаниеТиповСтрока);
	ТаблицаРезультат.Колонки.Добавить("Должность", ОписаниеТиповСтрока);
	
	ТаблицаРезультат.Колонки.Добавить("АресЭлектроннойПочты", ОписаниеТиповСтрока);
	ТаблицаРезультат.Колонки.Добавить("Телефон", ОписаниеТиповСтрока);
	ТаблицаРезультат.Колонки.Добавить("МобильныйТелефон", ОписаниеТиповСтрока);
	
	ТаблицаРезультат.Колонки.Добавить("Логин", ОписаниеТиповСтрока);
	ТаблицаРезультат.Колонки.Добавить("Пользователь", ОписаниеТиповСтрока);
	ТаблицаРезультат.Колонки.Добавить("objectGUID", ОписаниеТиповСтрока);
	ТаблицаРезультат.Колонки.Добавить("objectSID", ОписаниеТиповСтрока);
	ТаблицаРезультат.Колонки.Добавить("GUID1C", ОписаниеТиповСтрока);
	
	Возврат ТаблицаРезультат;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПреобразоватьSID(objectSID)
	
	Если objectSID = Null Тогда
		Возврат "";
	КонецЕсли;
	
	SID = "S-";
	
	МассивSID = Новый Массив;
	Для Каждого ЭлементSID Из objectSID Цикл
		МассивSID.Добавить(ЭлементSID);
	КонецЦикла;
	//SID_REVISION
	SID = SID + Строка(МассивSID[0]) + "-";
	
	КоличествоДашей = МассивSID[1];
	
	SECURITY_NT_AUTHORITY = 0;
	Для Инд = 0 По 5 Цикл
		SECURITY_NT_AUTHORITY = SECURITY_NT_AUTHORITY + МассивSID[2 + Инд] * Pow(2, (5 - Инд) * 8);
	КонецЦикла;
	SID = SID + Формат(SECURITY_NT_AUTHORITY, "ЧГ=");
	
	Для Инд = 0 По КоличествоДашей - 1 Цикл
		SID = SID + "-";
		Даш = 0;
		Для ИндДаш = 0 По 3 Цикл
			Даш = Даш + МассивSID[8 + 4 * Инд + ИндДаш] * Pow(2, (ИндДаш) * 8);
		КонецЦикла;
		SID = SID + Формат(Даш, "ЧГ=");;
	КонецЦикла;
	
	Возврат SID; 
КонецФункции

&НаСервереБезКонтекста
Функция ПреобразоватьGUID(COMobjectGUID) Экспорт
	
	objectGUID = COMobjectGUID.Выгрузить();
	//GUID = "{";
	GUID = "";
	GUID = GUID + Из_10_В_16(objectGUID[3]);
	GUID = GUID + Из_10_В_16(objectGUID[2]);
	GUID = GUID + Из_10_В_16(objectGUID[1]);
	GUID = GUID + Из_10_В_16(objectGUID[0]);
	GUID = GUID + "-";
	GUID = GUID + Из_10_В_16(objectGUID[5]);
	GUID = GUID + Из_10_В_16(objectGUID[4]);
	GUID = GUID + "-";
	GUID = GUID + Из_10_В_16(objectGUID[7]);
	GUID = GUID + Из_10_В_16(objectGUID[6]);
	GUID = GUID + "-";
	GUID = GUID + Из_10_В_16(objectGUID[8]);
	GUID = GUID + Из_10_В_16(objectGUID[9]);
	GUID = GUID + "-"; 
	GUID = GUID + Из_10_В_16(objectGUID[10]);
	GUID = GUID + Из_10_В_16(objectGUID[11]);
	GUID = GUID + Из_10_В_16(objectGUID[12]);
	GUID = GUID + Из_10_В_16(objectGUID[13]);
	GUID = GUID + Из_10_В_16(objectGUID[14]);
	GUID = GUID + Из_10_В_16(objectGUID[15]);
	//GUID = GUID + "}";
	Возврат GUID;
	
КонецФункции

&НаСервереБезКонтекста
Функция Из_10_В_16(Знач Значение = 0, Нотация = 16) Экспорт
	
	Если Нотация <= 0 Тогда 
		Возврат("") 
	КонецЕсли;
	
	Значение = Число(Значение);
	
	Если Значение <= 0 Тогда 
		Возврат("0") 
	КонецЕсли;
	
	Значение = Цел(Значение);
	
	Результат = "";
	
	Пока Значение > 0 Цикл
		
		Результат = Сред("0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ", Значение%Нотация + 1 , 1) + Результат;
		Значение = Цел(Значение/Нотация);
		
	КонецЦикла;
	
	Если СтрДлина(Результат) < 2 Тогда
		Результат = "0" + Результат;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура АктуализироватьФизЛицаСотрудниковНаСервере()
	
	ВыполнитьЗаполнение(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура АктуализироватьФизЛицаСотрудников(Команда)
	
	АктуализироватьФизЛицаСотрудниковНаСервере();
	
КонецПроцедуры


&НаСервере
Функция ПолучитьТаблицуДанных()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПользователиАД.objectGUID КАК objectGUID,
	|	ПользователиАД.objectSID КАК objectSID,
	|	ПользователиАД.ВыводимоеИмя КАК ВыводимоеИмя,
	|	ПользователиАД.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ПользователиАД.ОсновнойСотрудник КАК ОсновнойСотрудник,
	|	ПользователиАД.ОсновнойСотрудник.Емайл КАК АдресЭлектроннойПочтыЗУП,
	|	ПользователиАД.ОсновнойСотрудник.ТелефонМобильный КАК ТелефонМобильныйЗУП,
	|	ПользователиАД.ОсновнойСотрудник.ТелефонРабочий КАК ТелефонРабочийЗУП,
	|	ПользователиАД.ОсновнойСотрудник.ПодразделениеЗУППредставление КАК ПодразделениеЗУП,
	|	ПользователиАД.ОсновнойСотрудник.ДолжностьЗУППредставление КАК ДолжностьЗУП
	|ИЗ
	|	РегистрСведений.ПользователиАД КАК ПользователиАД
	|ГДЕ
	|	ПользователиАД.ОсновнойСотрудник <> ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)
	|	И ПользователиАД.КоличествоДействующихСотрудников = 1";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	ТаблицаДанные = Новый ТаблицаЗначений;
	ТаблицаДанные.Колонки.Добавить("objectGUID", Новый ОписаниеТипов("Строка"));
	ТаблицаДанные.Колонки.Добавить("objectSID", Новый ОписаниеТипов("Строка"));
	ТаблицаДанные.Колонки.Добавить("guid1С", Новый ОписаниеТипов("Строка"));
	ТаблицаДанные.Колонки.Добавить("ВыводимоеИмя", Новый ОписаниеТипов("Строка"));
	ТаблицаДанные.Колонки.Добавить("АдресЭлектроннойПочтыЗУП", Новый ОписаниеТипов("Строка"));
	ТаблицаДанные.Колонки.Добавить("ТелефонМобильныйЗУП", Новый ОписаниеТипов("Строка"));
	ТаблицаДанные.Колонки.Добавить("ТелефонРабочийЗУП", Новый ОписаниеТипов("Строка"));
	ТаблицаДанные.Колонки.Добавить("ПодразделениеЗУП", Новый ОписаниеТипов("Строка"));
	ТаблицаДанные.Колонки.Добавить("ДолжностьЗУП", Новый ОписаниеТипов("Строка"));
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		НоваяСтрокаТаблицаДанные = ТаблицаДанные.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТаблицаДанные, ВыборкаДетальныеЗаписи);
		
		НоваяСтрокаТаблицаДанные.guid1С = СокрЛП(Строка(ВыборкаДетальныеЗаписи.ФизическоеЛицо.УникальныйИдентификатор()));
		
	КонецЦикла;
	
	Возврат ТаблицаДанные;
	
КонецФункции

&НаКлиенте
Функция ПолучитьДиалогВыбораФайла(Расширение)
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	ДиалогВыбораФайла.Заголовок = "Выберите файл для сохранения";	
	ДиалогВыбораФайла.ПредварительныйПросмотр		=	Ложь;
	ДиалогВыбораФайла.МножественныйВыбор			=	Ложь;
	ДиалогВыбораФайла.ИндексФильтра					=	1;
	ДиалогВыбораФайла.ПроверятьСуществованиеФайла	=	Ложь;
	ДиалогВыбораФайла.Фильтр						=	"Файл "+ Расширение + "(*." + Расширение + ")|*." + Расширение;
	ДиалогВыбораФайла.Расширение = Расширение;
	
	Возврат ДиалогВыбораФайла;
	
КонецФункции


&НаСервере
Процедура ВыгрузитьВJSONНаСервере()
	
	ТаблицаДанные = ПолучитьТаблицуДанных();
	СериализоватьВJSON(ТаблицаДанные);
	Сообщить("Сохранено в " + ПолноеИмяФайла);
	
КонецПроцедуры

&НаСервере
Процедура СериализоватьВJSON(ТаблицаДанных)
	
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.ОткрытьФайл(ПолноеИмяФайла, "UTF-8",, Новый ПараметрыЗаписиJSON(, Символы.Таб));
	
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	ЗаписьJSON.ЗаписатьИмяСвойства("employees");
	ЗаписьJSON.ЗаписатьНачалоМассива();
	
	Для Каждого СтрокаТаблицы Из ТаблицаДанных Цикл
		
		ЗаписьJSON.ЗаписатьНачалоОбъекта();
		
		ЗаписьJSON.ЗаписатьИмяСвойства("objectGUID");
		ЗаписьJSON.ЗаписатьЗначение(СтрокаТаблицы.objectGUID);
		
		ЗаписьJSON.ЗаписатьИмяСвойства("objectSID");
		ЗаписьJSON.ЗаписатьЗначение(СтрокаТаблицы.objectSID);
		
		ЗаписьJSON.ЗаписатьИмяСвойства("guid1С");
		ЗаписьJSON.ЗаписатьЗначение(СтрокаТаблицы.guid1С);
		
		ЗаписьJSON.ЗаписатьИмяСвойства("ВыводимоеИмя");
		ЗаписьJSON.ЗаписатьЗначение(СтрокаТаблицы.ВыводимоеИмя);
		
		ЗаписьJSON.ЗаписатьИмяСвойства("АдресЭлектроннойПочтыЗУП");
		ЗаписьJSON.ЗаписатьЗначение(СтрокаТаблицы.АдресЭлектроннойПочтыЗУП);
		
		ЗаписьJSON.ЗаписатьИмяСвойства("ТелефонМобильныйЗУП");
		ЗаписьJSON.ЗаписатьЗначение(СтрокаТаблицы.ТелефонМобильныйЗУП);
		
		ЗаписьJSON.ЗаписатьИмяСвойства("ТелефонРабочийЗУП");
		ЗаписьJSON.ЗаписатьЗначение(СтрокаТаблицы.ТелефонРабочийЗУП);
		
		ЗаписьJSON.ЗаписатьИмяСвойства("ПодразделениеЗУП");
		ЗаписьJSON.ЗаписатьЗначение(СтрокаТаблицы.ПодразделениеЗУП);
		
		ЗаписьJSON.ЗаписатьИмяСвойства("ДолжностьЗУП");
		ЗаписьJSON.ЗаписатьЗначение(СтрокаТаблицы.ДолжностьЗУП);
		
		ЗаписьJSON.ЗаписатьКонецОбъекта();
		
	КонецЦикла;
	
	ЗаписьJSON.ЗаписатьКонецМассива();
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	ЗаписьJSON.Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьВJSON(Команда)
	
	ДиалогВыбораФайла = ПолучитьДиалогВыбораФайла("json");
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыгрузитьВJSONЗавершение", ЭтотОбъект);
	ДиалогВыбораФайла.Показать(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьВJSONЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныеФайлы <> Неопределено Тогда
		
		Файл = ВыбранныеФайлы[0];
		Состояние(Нстр("ru = 'Выполняется сохранение данных. Пожалуйста, подождите...'"));
		ПолноеИмяФайла = Файл;
		ВыгрузитьВJSONНаСервере();		
		
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ВыгрузитьВCSV(Команда)
	
	ДиалогВыбораФайла = ПолучитьДиалогВыбораФайла("csv");
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыгрузитьВCSVЗавершение", ЭтотОбъект);
	
	ДиалогВыбораФайла.Показать(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьВCSVЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныеФайлы <> Неопределено Тогда
		
		Файл = ВыбранныеФайлы[0];
		Состояние(Нстр("ru = 'Выполняется сохранение данных. Пожалуйста, подождите...'"));
		ПолноеИмяФайла = Файл;
		ВыгрузитьВCSVНаСервере();		
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ВыгрузитьВCSVНаСервере()
	
	ТаблицаДанные = ПолучитьТаблицуДанных();
	
	ТекстовыйДокумент = Новый ТекстовыйДокумент;
	Заголовки = "objectGUID;objectSID;guid;name;mail;phone;b;Department;title";
	ТекстовыйДокумент.ДобавитьСтроку(Заголовки);
	
	Для Каждого СтрокаТаблица Из ТаблицаДанные Цикл
		
		СтрокаCSV = "";
		Для Каждого КолонкаТаблицы Из ТаблицаДанные.Колонки Цикл
			СтрокаCSV = СтрокаCSV + Строка(СтрокаТаблица[КолонкаТаблицы.Имя])+";";
		КонецЦикла;
		
		ТекстовыйДокумент.ДобавитьСтроку(СтрокаCSV);
	КонецЦикла;
	
	ТекстовыйДокумент.Записать(ПолноеИмяФайла, КодировкаТекста.UTF8);
	Сообщить("Сохранено в " + ПолноеИмяФайла);
	
КонецПроцедуры


